<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAACT1JREFUeF7t
        XVtvFVUYhZhovJCo8fpk9EmJPPgLJCGA0LS0BwotpVBSCuXeFAi3ptwChFsoAqXQQvgFhuiLPwBf0Bge
        gAgC8UXQxBdFjC84rjXd+2R39ztzZg4zZy7dK1k5Tc939neZfflm7z17pjk4ODg4ODg4ODg4ODg4ODhE
        Q0NDw0dNTU0lsH/RokVfgl83NzffAO+Cv4OeIv/m/25QhrL8DX/LMlRxDlGxcOHC9xDUdnAMQX2ITx3w
        5yLLAkdxgdoWLFjwtlLnUAkI1kxwBMF7YgczbkLPX/gcxucspd6BaG1tfRmB6URgvjMDVk9C93W0mg60
        mpeUWVMPjY2NbyEQgwjIIztAaRH2/IrPAdqmzJwSmI7a2APH/zCDkTHStm7aOm5yQYEL8VmaXVNU0taW
        lpZPlPnFAi5GA5z8x3a6FmLc8VavXu319vZ6W7du9Xbs2OGTf/N//I4y0m+jEhflKWxvUm4UAtPh2H44
        9p/tbBguWbLEW7t2rbd7927v+PHj3oULF7wrV66EImX5G/523bp13uLFi0Ud1ahsH6Av4y7lFKhYM+DI
        N6ZzYcjavWXLFu/YsWPe2NiYGOxayLJYJlsSL7Skuwqv0SflXr6gsqjvBacqcunSpd6ePXu80dHRScEc
        Hh729u3b523bts3buHGj19PT461atcprb2/3az7Jv/k/fkcZyvI3/K1dHnWw5VCnZEsl0qfcZWGcpoDx
        921nKpG1defOnd6lS5cmBO3MmTN+UJcvXy7+LgpXrFjhl8UyTR0jIyP++BOxxdzPzVQMpz1Qi0JPd2ze
        vNk7f/58OUCszWwlnZ2donwcZNnUYbYc2kBbkFWJvxH4oFQqva/cziZQa96AoXcsw0VynGB/rgPCLmRw
        cDCW1hCW1MUuzRynaFPYDA0V79b8+fPfVO5nC+pi/GAbLXHlypXeuXPnykG4ePGit2HDBlG2HqRu2qDt
        oW20UZIVeAMX8DUVhuwAhg1ZhorkgGuOFayRbW1tomw9SRtOnjxZtos2Mt2WZAUOqTBkAzBojmWgyL6+
        Pu/y5ctlh5kJSXJpctOmTeUKQ1s5rkhyNpEOz1XhSBcw5F30pY8lI01u3769XPt4w5bkoP285J2+2YX1
        9/eLchY5Sfq6Ckt6gBFXDaNE8kZMO8dspp4Dd63kGKJnBdhSQrbmqyos6QAp4ueCURNIR3Q3xVqX5ZZh
        kxdF36QyE+P0iyRncbYKT32BzOJFdFU/CQaVuWzZsnKuz4uyZs0aUS7LXL9+fblC0Rf6JMlpMiaMjQpT
        /YCxo1cyyCQn9ugIyTFEkskDzfGPWaEkY5KxUWGqD1ADXoDie7YhJs1x4+jRo6JMnnj48OGyPyEyr7uM
        kQpX8oDCLsuACeSEnR4QeZNV48xqpkgf9M0sfQsxld+lwpUswrQOToFEqE25IX3Rfg0MDIgyBu+qkCUL
        KJptKZ5ADno6M+EYIsnkmadOnfJ9o4/VBngw+YwLSgLvO1hzdC3q7u4WZfJM+qT9C9FKkr0vaWxsfAVp
        3d+CYp9Fbx2aOnus1koYK8ZMhS9+QAkhKifNPraIrUPTbCUhxshmFb74gbIDZ3RPnDjhG3n27Fnx+yJR
        Z5H0WfreYHIzwSj8pqWsTM5P6TtaLsdKMkXi3r17fV/pc5W5uZsqfPFCLUA9s5SVOVW6K02z26qyuPYs
        kVVFFByY7h44cMA3jgNdqVQSZYpE+qgTmBDZVvzpb7W5K72bo8jZlU2dbZ0+fVr8XjORuS0UHDig6/Fj
        165d4vdFJH2lz/Rd+t5g/AM7cupvBUU+ueeJhpFFmiqpRnPcrDKwX1NhjA9Bax9cuNGGdXV1iTJFpDmw
        V1nriT/TQqG/WErKNGsKt3NKMkUkfdV+B2VarMwqjPEBhf4mKSPNtY+oe2XzTPqq/WYMJBmSsVNhjA8o
        9F9JGWmuqEXYipl70lftd9CKKGOnwhgf3AWZzLQviOuyLKbaZaFgN6hbTHtQr5j28rk+bdhUSnvpq/a7
        7mkvLoi7MbQY9saQsVNhjA8o2E2dWEx16gSF9llKJnBoaMg3zk0uTmYik4so9AtJmabe+uOm30XGP/3O
        RRYU7BaoFM15LCY1koziMy7uqTDGCxQeuISrDZwK44hewiVbg59JTGYJl0DhbpODYlY2ORCSUp/mHTuf
        JZRkikD6pv0MkeYntw3IbZQbp86u6GvQRnLGKtGNcgQUua2kyr/Ut5ISUBJ6szU3JksyeWbmNlsTaIo/
        C8rLNDOQIk2lmKk9fZRkNBGj2ypcyQMKAx/Y4cMsOgvh4S5FeWCHvtCnTD2wQ/ChHdQAHhgpGeLTzLj4
        OJgkkyfysTztT4hWf6+uj7QRUBo4t0XqbIQMWlHLOs0V0TDZY90f+iRQAyI/Fp3HexOuc+iZ7Ew/Fk3A
        gMCMi6RDunbx4IAIp+ykTh5yYB6xEeY5ex6moMKTDmBE1aM1eJqDdoq1rKOjQ5TLEnkxzNadi6M1CNSI
        d2BI1dOpzX6YWUqWWwqXZs2WEbSBQRNd1ePMnMWIQWyuZKRNnqqj+2M6zKOQJLk0yZagb2xpK4+UkuQE
        zlHhyAZQQ/hWA8nQCeShYFk8wIw7SMwjB2ljhCQkWweYEfPmzXsVF+VHwdhJZHdVlCP+6LMKQfbAVUUY
        eEsy3CYXdcwaSR46dKjatv5YSV3Uadpw5MiR0IdggncSWw2MCzw6FYY+sAyvSN71msfEkgcPHvQPRJbk
        4yBrP3WYOvUxsZK8RFS8hzwSV7mdbSDb+BBGhz5ImfNCSR+kzDJ4YLJ9kDJ1UneIuSmT91HxPlDu5gNM
        AVGLIh81zjUG6bx33hPEfdQ4D1OOuheZPmUmvY0KrpbBga8kx4LImVXm/hxj4j6Mn5OE7JpqmYGmL/RJ
        uZdb8HUVA3Cm5tdV8JG5531dBdPtWpcBlO376cu4SwUAbh6b4NhT29layCyoji90+ROmNyg3ioWWlpZP
        4WCuXnmELupjZX5hwS6sG8zsS8FwIR6jVXTQ1nGTpwDU1lSOLYErj3XmI9jDV/mlf0J1mkBtbEuzK4Pu
        6/hsV+Y4aCAwsxAYvg6Vr0UVgxcjn0DPCDhTqXeoBLSYGarVjIKxvpwYn2MsG1lY9t75kRc0uNd3Ozg4
        ODg4ODg4ODg4ODg4pIBp0/4HokEbc8n0a5oAAAAASUVORK5CYII=
</value>
  </data>
</root>